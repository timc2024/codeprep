name: Build and Release
on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            output_name: CodeExtract.exe
            icon_file: assets/icon.ico
          - os: macos-latest
            output_name: CodeExtract
#            icon_file: assets/icon.icns
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Create .env file
      shell: bash
      run: |
        echo "MONGODB=${{ secrets.MONGODB }}" > .env
    - name: Build with PyInstaller
      run: |
        pyinstaller --name=CodeExtract --onefile --windowed --add-data ".env:./" --add-data "core:core" --add-data "ui:ui" --add-data "utils:utils" --add-data "data:data" --icon=${{ matrix.icon_file }} --clean --noupx main.py
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: CodeExtract-${{ runner.os }}
        path: dist/${{ matrix.output_name }}
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v3
    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: CodeExtract-Windows
        path: windows
    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: CodeExtract-macOS
        path: macos
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows/CodeExtract.exe
        asset_name: CodeExtract-Windows.exe
        asset_content_type: application/octet-stream
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./macos/CodeExtract
        asset_name: CodeExtract-macOS
        asset_content_type: application/octet-stream